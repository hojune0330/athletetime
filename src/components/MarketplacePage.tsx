// üõçÔ∏è Ï§ëÍ≥† Í±∞Îûò ÌéòÏù¥ÏßÄ - Ïú°ÏÉÅ Ïö©Ìíà Í±∞Îûò
import { useState } from 'react'

interface Product {
  id: number
  category: string
  title: string
  price: string
  image: string
  seller: string
  location: string
  time: string
  likes: number
  condition: string
  isHot?: boolean
  isSold?: boolean
}

interface MarketplacePageProps {
  isDarkMode: boolean
  onBack: () => void
}

export const MarketplacePage = ({ isDarkMode, onBack }: MarketplacePageProps) => {
  const [selectedCategory, setSelectedCategory] = useState('Ï†ÑÏ≤¥')
  const [showNewItem, setShowNewItem] = useState(false)
  const [products] = useState<Product[]>([
    {
      id: 1,
      category: 'Ïä§ÌååÏù¥ÌÅ¨',
      title: 'ÎÇòÏù¥ÌÇ§ Ï§å ÏäàÌçºÌîåÎùºÏù¥ ÏóòÎ¶¨Ìä∏2 (260mm)',
      price: '180,000Ïõê',
      image: 'üëü',
      seller: 'Ïä§ÌîÑÎ¶∞ÌÑ∞A',
      location: 'ÏÑúÏö∏ Í∞ïÎÇ®Íµ¨',
      time: '10Î∂Ñ Ï†Ñ',
      likes: 23,
      condition: 'ÏÉÅÌÉú AÍ∏â',
      isHot: true
    },
    {
      id: 2,
      category: 'Ïú†ÎãàÌèº',
      title: 'ÏïÑÏãùÏä§ ÎåÄÌëúÌåÄ Ïú†ÎãàÌèº ÏÉÅÌïòÏùò ÏÑ∏Ìä∏ (M)',
      price: '85,000Ïõê',
      image: 'üëï',
      seller: 'Ïú°ÏÉÅÎß§ÎãàÏïÑ',
      location: 'Í≤ΩÍ∏∞ ÏàòÏõêÏãú',
      time: '30Î∂Ñ Ï†Ñ',
      likes: 15,
      condition: 'ÎØ∏Í∞úÎ¥â ÏÉàÏÉÅÌíà'
    },
    {
      id: 3,
      category: 'Ïï°ÏÑ∏ÏÑúÎ¶¨',
      title: 'Í∞ÄÎØº Ìè¨Îü¨ÎÑà 245 ÎÆ§ÏßÅ (Î∞ïÏä§ÌíÄÏÖã)',
      price: '220,000Ïõê',
      image: '‚åö',
      seller: 'Îü¨ÎÑà123',
      location: 'Î∂ÄÏÇ∞ Ìï¥Ïö¥ÎåÄÍµ¨',
      time: '1ÏãúÍ∞Ñ Ï†Ñ',
      likes: 45,
      condition: 'ÏÇ¨Ïö©Í∞ê ÏûàÏùå',
      isHot: true
    },
    {
      id: 4,
      category: 'Ïä§ÌååÏù¥ÌÅ¨',
      title: 'ÏïÑÎîîÎã§Ïä§ ÏïÑÎîîÏ†úÎ°ú ÌîÑÎùºÏûÑ SP2 (270mm)',
      price: '150,000Ïõê',
      image: 'üëü',
      seller: 'Ï†êÌîÑÏôï',
      location: 'ÎåÄÍµ¨ ÏàòÏÑ±Íµ¨',
      time: '2ÏãúÍ∞Ñ Ï†Ñ',
      likes: 8,
      condition: 'ÏÉÅÌÉú BÍ∏â'
    },
    {
      id: 5,
      category: 'Ïö¥ÎèôÏö©Ìíà',
      title: 'Ïú°ÏÉÅ ÌóàÎì§ 10Í∞ú ÏÑ∏Ìä∏ (ÎÜíÏù¥Ï°∞Ï†à Í∞ÄÎä•)',
      price: '300,000Ïõê',
      image: 'üèÉ',
      seller: 'ÏΩîÏπòK',
      location: 'Ïù∏Ï≤ú ÎÇ®ÎèôÍµ¨',
      time: '3ÏãúÍ∞Ñ Ï†Ñ',
      likes: 12,
      condition: 'ÏÉÅÌÉú ÏñëÌò∏'
    },
    {
      id: 6,
      category: 'Ïä§ÌååÏù¥ÌÅ¨',
      title: 'Îâ¥Î∞úÎûÄÏä§ FuelCell SD-X (265mm) ÌåêÎß§ÏôÑÎ£å',
      price: '120,000Ïõê',
      image: 'üëü',
      seller: 'Îã¨Î¶¨Í∏∞Ïôï',
      location: 'ÏÑúÏö∏ ÏÜ°ÌååÍµ¨',
      time: '5ÏãúÍ∞Ñ Ï†Ñ',
      likes: 34,
      condition: 'ÏÉÅÌÉú AÍ∏â',
      isSold: true
    }
  ])

  const categories = ['Ï†ÑÏ≤¥', 'Ïä§ÌååÏù¥ÌÅ¨', 'Ïú†ÎãàÌèº', 'Ïï°ÏÑ∏ÏÑúÎ¶¨', 'Ïö¥ÎèôÏö©Ìíà', 'Í∏∞ÌÉÄ']

  const filteredProducts = selectedCategory === 'Ï†ÑÏ≤¥' 
    ? products 
    : products.filter(product => product.category === selectedCategory)

  return (
    <div className={`min-h-screen transition-all ${
      isDarkMode 
        ? 'bg-gradient-to-br from-gray-900 via-purple-900 to-violet-900' 
        : 'bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50'
    }`}>
      {/* Ìó§Îçî */}
      <header className={`sticky top-0 z-50 backdrop-blur-xl ${
        isDarkMode 
          ? 'bg-gray-900/70 border-b border-gray-800' 
          : 'bg-white/70 border-b border-gray-200'
      }`}>
        <div className="max-w-7xl mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <button
                onClick={onBack}
                className={`p-2 rounded-lg transition-all hover:scale-110 ${
                  isDarkMode 
                    ? 'text-gray-300 hover:text-white hover:bg-gray-800' 
                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'
                }`}
              >
                <i className="fas fa-arrow-left text-xl"></i>
              </button>
              <h1 className={`text-2xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>
                Ï§ëÍ≥† Í±∞Îûò
              </h1>
            </div>
            
            <button
              onClick={() => setShowNewItem(true)}
              className="px-4 py-2 bg-gradient-to-r from-green-500 to-emerald-500 text-white font-bold rounded-lg hover:scale-105 transition-all"
            >
              <i className="fas fa-plus mr-2"></i>
              ÌåêÎß§ÌïòÍ∏∞
            </button>
          </div>
        </div>
      </header>

      <div className="max-w-7xl mx-auto px-4 py-6">
        {/* Ïπ¥ÌÖåÍ≥†Î¶¨ ÌïÑÌÑ∞ */}
        <div className="flex overflow-x-auto space-x-2 mb-6 pb-2">
          {categories.map(category => (
            <button
              key={category}
              onClick={() => setSelectedCategory(category)}
              className={`px-4 py-2 rounded-full font-medium whitespace-nowrap transition-all ${
                selectedCategory === category
                  ? 'bg-gradient-to-r from-green-500 to-emerald-500 text-white scale-105'
                  : isDarkMode
                    ? 'bg-gray-800 text-gray-300 hover:bg-gray-700'
                    : 'bg-white text-gray-700 hover:bg-gray-100'
              }`}
            >
              {category}
            </button>
          ))}
        </div>

        {/* ÏÉÅÌíà Í∑∏Î¶¨Îìú */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredProducts.map(product => (
            <div
              key={product.id}
              className={`rounded-2xl overflow-hidden transition-all hover:scale-105 cursor-pointer ${
                isDarkMode 
                  ? 'bg-gray-900/80 border border-gray-800' 
                  : 'bg-white/80 border border-gray-200'
              } ${product.isHot ? 'ring-2 ring-orange-500 ring-opacity-50' : ''}`}
            >
              {/* Ïù¥ÎØ∏ÏßÄ ÏòÅÏó≠ */}
              <div className={`h-48 flex items-center justify-center text-6xl ${
                isDarkMode ? 'bg-gray-800' : 'bg-gray-100'
              } ${product.isSold ? 'opacity-50' : ''}`}>
                {product.image}
                {product.isSold && (
                  <div className="absolute inset-0 flex items-center justify-center">
                    <span className="bg-black/70 text-white px-4 py-2 rounded-lg font-bold text-lg">
                      ÌåêÎß§ÏôÑÎ£å
                    </span>
                  </div>
                )}
              </div>

              {/* Ï†ïÎ≥¥ ÏòÅÏó≠ */}
              <div className="p-4">
                <div className="flex items-center justify-between mb-2">
                  <span className={`px-2 py-1 rounded-full text-xs font-semibold ${
                    isDarkMode 
                      ? 'bg-green-500/20 text-green-300' 
                      : 'bg-green-100 text-green-600'
                  }`}>
                    {product.category}
                  </span>
                  {product.isHot && !product.isSold && (
                    <span className="px-2 py-1 bg-gradient-to-r from-orange-500 to-red-500 text-white text-xs font-bold rounded-full animate-pulse">
                      üî• Ïù∏Í∏∞
                    </span>
                  )}
                </div>

                <h3 className={`font-bold mb-2 ${isDarkMode ? 'text-white' : 'text-gray-900'} ${
                  product.isSold ? 'line-through opacity-50' : ''
                }`}>
                  {product.title}
                </h3>

                <div className={`text-2xl font-bold mb-2 ${
                  product.isSold 
                    ? 'text-gray-500' 
                    : 'bg-gradient-to-r from-green-500 to-emerald-500 bg-clip-text text-transparent'
                }`}>
                  {product.price}
                </div>

                <div className={`text-sm mb-3 ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>
                  <div className="flex items-center space-x-2 mb-1">
                    <i className="fas fa-map-marker-alt"></i>
                    <span>{product.location}</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <i className="fas fa-tag"></i>
                    <span>{product.condition}</span>
                  </div>
                </div>

                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-2">
                    <div className={`w-6 h-6 rounded-full flex items-center justify-center ${
                      isDarkMode ? 'bg-gray-700' : 'bg-gray-200'
                    }`}>
                      <i className="fas fa-user text-xs"></i>
                    </div>
                    <span className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>
                      {product.seller}
                    </span>
                  </div>
                  <div className="flex items-center space-x-3 text-sm">
                    <span className={isDarkMode ? 'text-gray-400' : 'text-gray-500'}>
                      {product.time}
                    </span>
                    <button className={`flex items-center space-x-1 ${
                      isDarkMode ? 'text-red-400' : 'text-red-500'
                    }`}>
                      <i className="fas fa-heart"></i>
                      <span>{product.likes}</span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* ÌåêÎß§ ÌåÅ Î∞∞ÎÑà */}
        <div className={`mt-12 p-6 rounded-2xl ${
          isDarkMode 
            ? 'bg-gradient-to-r from-purple-900/50 to-blue-900/50 border border-purple-700' 
            : 'bg-gradient-to-r from-purple-100 to-blue-100 border border-purple-200'
        }`}>
          <h3 className={`text-xl font-bold mb-3 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>
            üí° ÏïàÏ†ÑÌïú Í±∞Îûò TIP
          </h3>
          <ul className={`space-y-2 ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>
            <li>‚Ä¢ ÏßÅÍ±∞Îûò Ïãú Í≥µÍ≥µÏû•ÏÜåÏóêÏÑú ÎßåÎÇòÏÑ∏Ïöî</li>
            <li>‚Ä¢ Ï†úÌíà ÏÉÅÌÉúÎ•º ÍººÍººÌûà ÌôïÏù∏ÌïòÏÑ∏Ïöî</li>
            <li>‚Ä¢ Ï†ïÌíà Ïù∏Ï¶ùÏÑúÎÇò Íµ¨Îß§ ÏòÅÏàòÏ¶ùÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî</li>
            <li>‚Ä¢ ÌÉùÎ∞∞ Í±∞Îûò Ïãú ÏïàÏ†ÑÍ≤∞Ï†úÎ•º Ïù¥Ïö©ÌïòÏÑ∏Ïöî</li>
          </ul>
        </div>
      </div>

      {/* ÌåêÎß§ÌïòÍ∏∞ Î™®Îã¨ */}
      {showNewItem && (
        <>
          <div 
            className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50"
            onClick={() => setShowNewItem(false)}
          />
          <div className="fixed inset-0 flex items-center justify-center z-50 p-4">
            <div className={`w-full max-w-2xl rounded-3xl p-6 ${
              isDarkMode ? 'bg-gray-900' : 'bg-white'
            }`}>
              <h2 className={`text-2xl font-bold mb-4 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>
                ÏÉÅÌíà Îì±Î°ùÌïòÍ∏∞
              </h2>
              
              <div className="grid grid-cols-2 gap-4 mb-4">
                <select className={`p-3 rounded-lg ${
                  isDarkMode 
                    ? 'bg-gray-800 text-white border-gray-700' 
                    : 'bg-gray-100 text-gray-900 border-gray-300'
                } border`}>
                  <option>Ïπ¥ÌÖåÍ≥†Î¶¨ ÏÑ†ÌÉù</option>
                  {categories.filter(c => c !== 'Ï†ÑÏ≤¥').map(category => (
                    <option key={category} value={category}>{category}</option>
                  ))}
                </select>

                <select className={`p-3 rounded-lg ${
                  isDarkMode 
                    ? 'bg-gray-800 text-white border-gray-700' 
                    : 'bg-gray-100 text-gray-900 border-gray-300'
                } border`}>
                  <option>ÏÉÅÌíà ÏÉÅÌÉú</option>
                  <option>ÏÉàÏÉÅÌíà (ÎØ∏Í∞úÎ¥â)</option>
                  <option>ÏÉÅÌÉú AÍ∏â</option>
                  <option>ÏÉÅÌÉú BÍ∏â</option>
                  <option>ÏÇ¨Ïö©Í∞ê ÏûàÏùå</option>
                </select>
              </div>

              <input
                type="text"
                placeholder="ÏÉÅÌíàÎ™ÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                className={`w-full p-3 rounded-lg mb-4 ${
                  isDarkMode 
                    ? 'bg-gray-800 text-white border-gray-700' 
                    : 'bg-gray-100 text-gray-900 border-gray-300'
                } border`}
              />

              <input
                type="text"
                placeholder="Í∞ÄÍ≤©ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî (Ïòà: 150,000Ïõê)"
                className={`w-full p-3 rounded-lg mb-4 ${
                  isDarkMode 
                    ? 'bg-gray-800 text-white border-gray-700' 
                    : 'bg-gray-100 text-gray-900 border-gray-300'
                } border`}
              />

              <textarea
                placeholder="ÏÉÅÌíà ÏÑ§Î™ÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                rows={4}
                className={`w-full p-3 rounded-lg mb-4 ${
                  isDarkMode 
                    ? 'bg-gray-800 text-white border-gray-700' 
                    : 'bg-gray-100 text-gray-900 border-gray-300'
                } border`}
              />

              <div className={`p-8 rounded-lg border-2 border-dashed mb-4 text-center ${
                isDarkMode 
                  ? 'bg-gray-800 border-gray-600' 
                  : 'bg-gray-50 border-gray-300'
              }`}>
                <i className={`fas fa-camera text-4xl mb-2 ${
                  isDarkMode ? 'text-gray-500' : 'text-gray-400'
                }`}></i>
                <p className={isDarkMode ? 'text-gray-400' : 'text-gray-600'}>
                  ÏÇ¨ÏßÑ Ï∂îÍ∞ÄÌïòÍ∏∞ (ÏµúÎåÄ 10Ïû•)
                </p>
              </div>

              <div className="flex space-x-3">
                <button
                  onClick={() => setShowNewItem(false)}
                  className="flex-1 py-3 bg-gradient-to-r from-green-500 to-emerald-500 text-white font-bold rounded-lg hover:scale-105 transition-all"
                >
                  Îì±Î°ùÌïòÍ∏∞
                </button>
                <button
                  onClick={() => setShowNewItem(false)}
                  className={`px-6 py-3 rounded-lg font-medium ${
                    isDarkMode 
                      ? 'bg-gray-800 text-gray-300 hover:bg-gray-700' 
                      : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                  }`}
                >
                  Ï∑®ÏÜå
                </button>
              </div>
            </div>
          </div>
        </>
      )}
    </div>
  )
}